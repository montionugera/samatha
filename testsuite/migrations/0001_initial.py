# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-27 15:56
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('epic', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DefectReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('update_dttm', models.DateTimeField(auto_now=True)),
                ('approve_dttm', models.DateTimeField(auto_now_add=True)),
                ('reject_dttm', models.DateTimeField(auto_now_add=True)),
                ('approve_state', models.CharField(choices=[(b'PP', b'Prepare'), (b'RQ_APP', b'Request for approve'), (b'RQ_APP_RJ_ASK', b'Reject ask'), (b'RQ_APP_RJ_AC', b'Reject accepted'), (b'RQ_APP_RJ_NOT-AC', b'Reject not accepted'), (b'APPV', b'Approved'), (b'CHG_PP', b'Change prepare')], default=b'PP', max_length=20)),
                ('severity', models.CharField(choices=[('CC', 'CRITICAL'), ('MJ', 'MAJOR'), ('MJ', 'MINOR'), ('CM', 'COSMETIC')], default='CC', max_length=20)),
                ('phase_introduce', models.CharField(choices=[('UK', 'Unknown'), ('RQ', 'Phase requirement'), ('DS', 'Phase design'), ('CD', 'Phase code')], default='UK', max_length=20)),
                ('environment', models.CharField(choices=[('UK', 'Unknown'), ('RQ', 'Phase requirement'), ('DS', 'Phase design'), ('CD', 'Phase code')], default='UAT', max_length=20)),
                ('defect_type', models.CharField(choices=[('NM', 'Normal (in test round)'), ('IS', 'Hot issues (post release)')], default='NM', max_length=20)),
                ('approver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_defectreport_approver_related', related_query_name='testsuite_defectreports_approver', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_defectreport_creator_related', related_query_name='testsuite_defectreports_creator', to=settings.AUTH_USER_MODEL)),
                ('rejector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_defectreport_rejector_related', related_query_name='testsuite_defectreports_rejector', to=settings.AUTH_USER_MODEL)),
                ('relate_defect_tasks', models.ManyToManyField(to='epic.Task')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_reporter', to=settings.AUTH_USER_MODEL)),
                ('responder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_responder', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EpicTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('update_dttm', models.DateTimeField(auto_now=True)),
                ('approve_dttm', models.DateTimeField(auto_now_add=True)),
                ('reject_dttm', models.DateTimeField(auto_now_add=True)),
                ('approve_state', models.CharField(choices=[(b'PP', b'Prepare'), (b'RQ_APP', b'Request for approve'), (b'RQ_APP_RJ_ASK', b'Reject ask'), (b'RQ_APP_RJ_AC', b'Reject accepted'), (b'RQ_APP_RJ_NOT-AC', b'Reject not accepted'), (b'APPV', b'Approved'), (b'CHG_PP', b'Change prepare')], default=b'PP', max_length=20)),
                ('name', models.CharField(max_length=256)),
                ('test_steps', models.TextField(default='null')),
                ('expected_results', models.TextField(default='null')),
                ('approver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_epictestcase_approver_related', related_query_name='testsuite_epictestcases_approver', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_epictestcase_creator_related', related_query_name='testsuite_epictestcases_creator', to=settings.AUTH_USER_MODEL)),
                ('rejector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_epictestcase_rejector_related', related_query_name='testsuite_epictestcases_rejector', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EpicTestSuite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=128, unique=True)),
                ('epic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='epic.Epic')),
                ('story', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='epic.Story')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='epic.Task')),
            ],
        ),
        migrations.CreateModel(
            name='TestRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('update_dttm', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=128, unique=True)),
                ('state', models.CharField(choices=[('W8_TEST', 'Waiting test'), ('PASS', 'Test pass'), ('FAIL', 'Test fail'), ('SKIP', 'Skip test')], default='W8_TEST', max_length=20)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_testrecord_creator_related', related_query_name='testsuite_testrecords_creator', to=settings.AUTH_USER_MODEL)),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testsuite.EpicTestCase')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestRound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_dttm', models.DateTimeField(auto_now_add=True)),
                ('update_dttm', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=128, unique=True)),
                ('state', models.CharField(choices=[('PP', 'Prepare'), ('IP', 'In-progress'), ('W8RV', 'Generate Report and waiting review'), ('DONE', 'Done')], default='DONE', max_length=20)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testsuite_testround_creator_related', related_query_name='testsuite_testrounds_creator', to=settings.AUTH_USER_MODEL)),
                ('tester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tester_testround', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='testrecord',
            name='testround',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testsuite.TestRound'),
        ),
        migrations.AddField(
            model_name='epictestcase',
            name='testsuite',
            field=models.ManyToManyField(to='testsuite.EpicTestSuite'),
        ),
    ]
